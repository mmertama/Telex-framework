@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@GEMPYRE_TARGETS_EXPORT_NAME@Targets.cmake")
include(CMakeFindDependencyMacro)

#set(gempyre_SCRIPTS_DIR "@RESOURCE_SCRIPTS_DIR@")
#list(APPEND CMAKE_MODULE_PATH ${gempyre_SCRIPTS_DIR})
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

#add_library(Gempyre::Gempyre ALIAS Gempyre::gempyre)

#list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

if(NOT WIN32)
    find_dependency(uSockets)
endif()

find_library(LIB_NAME NAMES gempyre PATHS "@LIBRARY_FULL_DIR@" NO_DEFAULT_PATH REQUIRED)
get_filename_component(THIS_LIB ${LIB_NAME} NAME)

if(WIN32)
    set(gempyre_LIBRARIES "@LIBRARY_FULL_DIR@/${THIS_LIB}")
else()
    set(gempyre_LIBRARIES "@LIBRARY_FULL_DIR@/${THIS_LIB};${uSockets_LIBRARY}")
endif()

set_and_check(gempyre_legacy_INCLUDE_DIR "@INCLUDE_FULL_DIR@")

set_and_check(gempyre_LIBRARY_DIR "@LIBRARY_FULL_DIR@")
set_and_check(gempyre_LIBRARY "@LIBRARY_FULL_DIR@/${THIS_LIB}")
set(ENV{gempyre_ROOT} "@PROJECT_CMAKE_DIR@")

set_target_properties(gempyre::gempyre PROPERTIES
    IMPORTED_LOCATION "${gempyre_LIBRARY}"
  )

check_required_components(@PROJECT_NAME@)

include_directories(${gempyre_legacy_INCLUDE_DIR})






