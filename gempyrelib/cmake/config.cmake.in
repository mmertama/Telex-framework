@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

# Create imported target gempyre::gempyre
add_library(gempyre::gempyre INTERFACE IMPORTED)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

if(WIN32)
    find_dependency(uva)
else()
    find_dependency(uSockets)
    find_package(Threads)
endif()

# Since msvc and mingw libraries are located in the same folder we have to be explicit with naming.
find_library(LIB_NAME_DEBUG NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}gempyred${CMAKE_STATIC_LIBRARY_SUFFIX} PATHS "@LIBRARY_FULL_DIR@" NO_DEFAULT_PATH REQUIRED)
message("Found debug libraries ${gempyre_LIBRARIES}")

find_library(LIB_NAME NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}gempyre${CMAKE_STATIC_LIBRARY_SUFFIX} PATHS "@LIBRARY_FULL_DIR@" NO_DEFAULT_PATH REQUIRED)
message("Found release libraries ${gempyre_LIBRARIES}")

get_filename_component(THIS_LIB ${LIB_NAME} NAME)
set_and_check(gempyre_legacy_INCLUDE_DIR "@INCLUDE_FULL_DIR@")
set_and_check(gempyre_LIBRARY_DIR "@LIBRARY_FULL_DIR@")
set(ENV{gempyre_ROOT} "@PROJECT_CMAKE_DIR@")

add_library(gempyre::gempyre_lib STATIC IMPORTED)
    
set_target_properties(gempyre::gempyre_lib PROPERTIES
    IMPORTED_LOCATION "${LIB_NAME}"
    #IMPORTED_LOCATION_DEBUG ${LIB_NAME_DEBUG}
    )

if(WIN32)
    add_library(gempyre::gempyre_uv STATIC IMPORTED)

    set_target_properties(gempyre::gempyre_uv PROPERTIES
        IMPORTED_LOCATION "${uva_LIBRARY}"
      #  IMPORTED_LOCATION_DEBUG ${uva_LIBRARY} # this is wrong
        )

    if(MSVC)
        set_target_properties(gempyre::gempyre_lib PROPERTIES
            INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:psapi.lib>;\$<LINK_ONLY:userenv.lib>;\$<LINK_ONLY:iphlpapi.lib>"
        )
    else()
        set_target_properties(gempyre::gempyre_lib PROPERTIES
            INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:psapi.lib>;\$<LINK_ONLY:userenv.lib>;\$<LINK_ONLY:iphlpapi.lib>;\$<LINK_ONLY:ws2_32.lib>"
            )
        set_target_properties(gempyre::gempyre_uv PROPERTIES
            INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:psapi.lib>;\$<LINK_ONLY:userenv.lib>;\$<LINK_ONLY:iphlpapi.lib>;\$<LINK_ONLY:ws2_32.lib>"
            )

    endif()    

    set_target_properties(gempyre::gempyre PROPERTIES
        INTERFACE_LINK_LIBRARIES "gempyre::gempyre_lib;gempyre::gempyre_uv"
        )
else()
    add_library(gempyre::gempyre_usock STATIC IMPORTED)

    set_target_properties(gempyre::gempyre_usock PROPERTIES
        IMPORTED_LOCATION "${uSockets_LIBRARY}"
        IMPORTED_LOCATION_DEBUG ${uSockets_LIBRARY} 
        )

    set_target_properties(gempyre::gempyre_lib PROPERTIES
            INTERFACE_LINK_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}"
            )    

    set_target_properties(gempyre::gempyre PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES ${gempyre_legacy_INCLUDE_DIR}
        INTERFACE_LINK_LIBRARIES  "gempyre::gempyre_lib;gempyre::gempyre_usock"
        )
endif()

check_required_components(@PROJECT_NAME@)

include_directories(${gempyre_legacy_INCLUDE_DIR})
